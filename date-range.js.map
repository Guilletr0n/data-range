{"version":3,"file":"date-range.js","sourceRoot":"","sources":["src/date-range.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAGlD,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAmB9B,MAAM;QACb,OAAO,IAAI,CAAC;;iDAEiC,IAAI,CAAC,QAAQ;;KAEzD,CAAA;IACH,CAAC;IAED,cAAc,CAAC,CAAQ,EAAE,CAAQ;QAC/B,OAAO,CAAC,KAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,IAAE,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEO,QAAQ;;QACd,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAA;QACtC,MAAM,IAAI,GAAU,IAAI,CAAC,cAAc,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;QAC9C,MAAM,SAAS,GAAmB,CAAA,MAAA,IAAI,CAAC,UAAU,0CAAE,aAAa,CAAC,aAAa,CAAmB,KAAI,IAAI,CAAC;QAE1G,KAAK,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;YACrC,MAAM,GAAG,GAAmB,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC3D,MAAM,QAAQ,GAAQ,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACjD,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC1B,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;SAC3B;IAEH,CAAC;CAEF,CAAA;AA9CiB,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;GAiB1B,CAAA;AAlBS,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CA+CrB;SA/CY,SAAS","sourcesContent":["import { LitElement, html, css } from \"lit\";\r\nimport { customElement } from \"lit/decorators.js\";\r\n\r\n@customElement('date-range')\r\nexport class DateRange extends LitElement {\r\n  static override styles = css`\r\n    :host {\r\n      border: 3px solid black;\r\n    }\r\n    #startDate {\r\n      border: 3px solid red;\r\n    }\r\n    input::-webkit-calendar-picker-indicator {\r\n      display: none;\r\n    }\r\n    #datePicker {\r\n      width: 400px;\r\n      height: 400px;\r\n      border:1px solid;\r\n      position: absolute;\r\n      bottom: 0;\r\n    }\r\n  `;\r\n  override render() {\r\n    return html `\r\n      <div id=\"datePicker\"></div>\r\n      <input id=\"startDate\" type=\"date\" @click=${this._onClick}/>\r\n      <input id=\"endDate\" type=\"date\"/>\r\n    `\r\n  }\r\n\r\n  getDaysInMonth(m:number, y:number):number {\r\n    return m===2 ? y & 3 || !(y%25) && y & 15 ? 28 : 29 : 30 + (m+(m>>3)&1);\r\n  }\r\n\r\n  private _onClick() {\r\n    this.dispatchEvent(new CustomEvent('count-changed'));\r\n    console.log('date range')\r\n    console.log(this.getDaysInMonth(9,22))\r\n    const days:number = this.getDaysInMonth(9,22);\r\n    const container:HTMLDivElement  = this.shadowRoot?.querySelector('#datePicker') as HTMLDivElement || null;\r\n    \r\n    for (let i:number = 0; i < days; i ++) {\r\n      const day:HTMLSpanElement = document.createElement('span');\r\n      const textNode:Text = document.createTextNode(i);\r\n      day.appendChild(textNode);\r\n      container.appendChild(day)\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'date-range': DateRange;\r\n  }\r\n}"]}